import pandas as pd
import numpy as np
from io import StringIO
import requests

# Function to get the SharePoint file
def get_sharepoint_file(url, username, password):
    # This example uses basic authentication to download the file (you may need to adjust depending on your authentication method)
    response = requests.get(url, auth=(username, password))
    if response.status_code == 200:
        return StringIO(response.text)
    else:
        raise Exception("Failed to fetch file from SharePoint")

# Set SharePoint file URL
sharepoint_url = 'https://libertymutual.sharepoint.com/sites/GRMFSDataStrategy/Shared%20Documents/General/Final%20Plan/USRM%20Versions%20PL%20OP/PL%20Ops%20Metrics%20Export%20-%20Current%20What%20If%20PBI.csv'

# Provide your SharePoint credentials
username = 'your_username'
password = 'your_password'

# Fetch the CSV file from SharePoint
csv_data = get_sharepoint_file(sharepoint_url, username, password)

# Load CSV into DataFrame
df = pd.read_csv(csv_data)

# Step 1: Replace "State N/A" with "State NA" in the "SS_States: US States" column
df['SS_States: US States'] = df['SS_States: US States'].replace("State N/A", "State NA")

# Step 2: Add the "State" column based on conditions
df['State'] = np.where(df['SS_States: US States'].isin(["State NA", ""]), "State NA", df['SS_States: US States'].str[:2])

# Step 3: Add the "Distribution" column based on the "Brand" and "Channel" columns
df['Distribution'] = np.where((df['Brand'] == "LM") & (df['Channel'] == "Platform"), "LM Platform", df['Channel'])

# Step 4: Add the "Reinsurance" column with the value "Direct"
df['Reinsurance'] = 'Direct'

# Step 5: Add the "Segment" column with the value "PL Segment"
df['Segment'] = 'PL Segment'

# Step 6: Rename columns for clarity
df.rename(columns={
    'SS_LOB: Export Metric': 'Line',
    'Line Item': 'Account',
    'Period': 'Book Date',
}, inplace=True)

# Step 7: Remove unnecessary columns (Brand, SS_States: US States)
df.drop(columns=['Brand', 'SS_States: US States'], inplace=True)

# Step 8: Convert column data types
df['State'] = df['State'].astype(str)
df['Amount'] = pd.to_numeric(df['Value'], errors='coerce')
df['Book Date'] = pd.to_datetime(df['Period'], errors='coerce')

# Step 9: Rename "Value" column to "Amount"
df.rename(columns={'Value': 'Amount'}, inplace=True)

# Step 10: Reorder columns as specified
df = df[['Account', 'Line', 'Book Date', 'Amount', 'State', 'Distribution', 'Reinsurance']]

# Display the transformed DataFrame
print(df.head())

# Optionally, save the final DataFrame to a new CSV file
df.to_csv('transformed_data.csv', index=False)
