df = df.rename(columns={
        "Line Item": "Account",
        "SS: Segment: BL": "Segment",
        "SS_LOB: BL Topline": "Line",
        "SS_Channel: BL": "Channel",
        "SS_States: US States Reporting": "States",
        "Value": "Amount",
        "Period": "Book Date"
    })
    
    # Step 3: Add "State" column based on "States"
    df["State"] = df["States"].apply(lambda x: x[:2] if x != "" else "State NA")
    
    # Step 4: Add "Distribution" column by concatenating "Segment" and "Channel"
    df["Distribution"] = df["Segment"] + "-" + df["Channel"]
    
    # Step 5: Add "Reinsurance" column with fixed value "RI_NA"
    df["Reinsurance"] = "RI_NA"
    
    # Step 6: Remove the "States" column
    df = df.drop(columns=["States"])
    
    # Step 7: Change column types
    df["State"] = df["State"].astype(str)
    df["Distribution"] = df["Distribution"].astype(str)
    df["Reinsurance"] = df["Reinsurance"].astype(str)
    df["Book Date"] = pd.to_datetime(df["Book Date"], errors='coerce')  # Ensure it's a date
    df["Amount"] = pd.to_numeric(df["Amount"], errors='coerce')  # Ensure it's a numeric value
    
    # Step 8: Select only the required columns
    df = df[["Account", "Line", "Book Date", "Amount", "State", "Distribution", "Reinsurance"]]
    
    # Print the resulting DataFrame
    print(df.head())  # Show top rows of the cleaned DataFrame

else:
    print(f"Failed to fetch data from SharePoint. HTTP Status code: {response.status_code}")
