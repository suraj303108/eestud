df = pd.read_csv(csv_data, delimiter=',', header=None, encoding='utf-8')

    # Step 2: Change column types to text (convert all columns to string)
    df = df.astype(str)

    # Step 3: Promote Headers (set first row as columns)
    df.columns = df.iloc[0]
    df = df.drop(0).reset_index(drop=True)

    # Step 4: Replace " - Reinsurance" in the 'Line Item' column
    df["Line Item"] = df["Line Item"].str.replace(" - Reinsurance", "", regex=False)

    # Step 5: Rename columns
    df = df.rename(columns={
        "Channel Hierarchy": "Channel",
        "LOB": "Line",
        "Line Item": "Account",
        "State": "States",
        "Period": "Book Date",
        "Value": "Amount"
    })

    # Step 6: Add "State" column based on "States"
    df["State"] = df["States"].apply(lambda x: "State NA" if x == "State NA" or x == "" else x[:2])

    # Step 7: Add "Distribution" column by concatenating "Segment" and "Channel"
    df["Distribution"] = df["Segment"].fillna('') + "-" + df["Channel"].fillna('')

    # Step 8: Add "Reinsurance" column with custom logic based on "RI Code" and "SC Reinsurance Code"
    df["Reinsurance"] = df.apply(
        lambda row: "" if row["RI Code"] == "" and row["SC Reinsurance Code"] == "" else 
                    (row["RI Code"] if row["SC Reinsurance Code"] == "" else 
                     (row["SC Reinsurance Code"] if row["RI Code"] == "" else "NA")), axis=1
    )

    # Step 9: Remove unnecessary columns
    df = df.drop(columns=["RI Code", "States", "SC Reinsurance Code", "Channel", "Segment", "DAC Accounts"])

    # Step 10: Change column types (ensure correct types for the final columns)
    df["Book Date"] = pd.to_datetime(df["Book Date"], errors='coerce')  # Convert to datetime
    df["Amount"] = pd.to_numeric(df["Amount"], errors='coerce')  # Convert to numeric

    # Step 11: Final DataFrame with selected columns
    df = df[["Account", "Line", "Book Date", "Amount", "State", "Distribution", "Reinsurance"]]

    # Print the resulting DataFrame
    print(df.head())
